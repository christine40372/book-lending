{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"書籍清單\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"ISBN\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"書名\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"作者\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"操作\")])], -1 /* HOISTED */);\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"table\", null, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredBooks, bookItem => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: bookItem.ISBN\n    }, [_createElementVNode(\"td\", null, _toDisplayString(bookItem.ISBN), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(bookItem.Name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(bookItem.Author), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.viewDetails(bookItem)\n    }, \"詳細資訊\", 8 /* PROPS */, _hoisted_3)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$options","filteredBooks","bookItem","key","ISBN","_toDisplayString","Name","Author","onClick","$event","viewDetails","_hoisted_3"],"sources":["C:\\Users\\christine\\Desktop\\book_lending-no3\\src\\webapp\\src\\components\\BookList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>書籍清單</h2>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>ISBN</th>\r\n          <th>書名</th>\r\n          <th>作者</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"bookItem in filteredBooks\" :key=\"bookItem.ISBN\">\r\n          <td>{{ bookItem.ISBN }}</td>\r\n          <td>{{ bookItem.Name }}</td>\r\n          <td>{{ bookItem.Author }}</td>\r\n          <td>\r\n            <button @click=\"viewDetails(bookItem)\">詳細資訊</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      books: [] // 從後端獲取書籍清單的資料\r\n    };\r\n  },\r\n  computed: {\r\n    filteredBooks() {\r\n      // 在此篩選或排序書籍清單的邏輯，例如根據特定條件過濾或排序 books\r\n      return this.books;\r\n    }\r\n  },\r\n  methods: {\r\n    viewDetails(book) {\r\n      // 顯示書籍詳細資訊並提供借閱按鈕的邏輯\r\n    },\r\n    async fetchBooks() {\r\n      try {\r\n        const response = await axios.get('/api/books'); // 替換為您的後端 API 端點\r\n        this.books = response.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchBooks();\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";gCAEIA,mBAAA,CAAa,YAAT,MAAI;gCAENA,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAW,YAAP,IAAE,E;;;uBARdC,mBAAA,CAsBM,cArBJC,UAAa,EACbF,mBAAA,CAmBQ,gBAlBNG,UAOQ,EACRH,mBAAA,CASQ,iB,kBARNC,mBAAA,CAOKG,SAAA,QAAAC,WAAA,CAPkBC,QAAA,CAAAC,aAAa,EAAzBC,QAAQ;yBAAnBP,mBAAA,CAOK;MAPkCQ,GAAG,EAAED,QAAQ,CAACE;QACnDV,mBAAA,CAA4B,YAAAW,gBAAA,CAArBH,QAAQ,CAACE,IAAI,kBACpBV,mBAAA,CAA4B,YAAAW,gBAAA,CAArBH,QAAQ,CAACI,IAAI,kBACpBZ,mBAAA,CAA8B,YAAAW,gBAAA,CAAvBH,QAAQ,CAACK,MAAM,kBACtBb,mBAAA,CAEK,aADHA,mBAAA,CAAoD;MAA3Cc,OAAK,EAAAC,MAAA,IAAET,QAAA,CAAAU,WAAW,CAACR,QAAQ;OAAG,MAAI,iBAAAS,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}